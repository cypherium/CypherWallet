{"version":3,"sources":["src/app/pages/export-mnemonic/export-mnemonic.page.html","src/app/pages/export-mnemonic/export-mnemonic.module.ts","src/app/pages/export-mnemonic/export-mnemonic.page.scss","src/app/pages/export-mnemonic/export-mnemonic.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{ action ? ('BACKUP_MNEMONIC' | translate) : ('EXPORT_MNEMONIC' | translate) }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"main\\\">\\n        <div class=\\\"tips\\\" translate=\\\"\\\">BACKUP_MNEMONIC_TIPS</div>\\n        <div class=\\\"mnemonic-grid clear\\\">\\n            <div class=\\\"grid\\\" *ngFor=\\\"let mnemonic of mnemonicList\\\">\\n                {{ mnemonic }}</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"confirm-button bottom-button\\\" tappable (click)=\\\"goNext()\\\" [ngClass]=\\\"enabled ? '' : 'disabled'\\\"\\n        translate=\\\"\\\">NEXT\\n    </div>\\n\\n</ion-content>\\n\\n\\n<div class=\\\"prompt-mask\\\" *ngIf=\\\"ifShowPasswordPrompt\\\">\\n    <div class=\\\"content\\\">\\n        <div class=\\\"desc\\\">{{ promptDesc }}</div>\\n\\n        <div class=\\\"input-password-wrapper\\\">\\n            <div class=\\\"input-wrapper\\\">\\n                <input [type]=\\\"ifEyeOpen ? 'text' : 'password'\\\" [(ngModel)]=\\\"paymentPassword\\\" placeholder=\\\"请输入您的安全密码\\\">\\n            </div>\\n            <div class=\\\"eye\\\" tappable (click)=\\\"toggleEyeOpen()\\\" [ngClass]=\\\"ifEyeOpen ? 'eye-open' : 'eye-close'\\\"></div>\\n        </div>\\n        <div class=\\\"error-text\\\" *ngIf=\\\"promptError\\\">{{ promptError }}</div>\\n\\n        <div class=\\\"btns\\\">\\n            <div class=\\\"btn btn-close\\\" tappable (click)=\\\"cancelPrompt()\\\" translate=\\\"\\\">CANCEL</div>\\n            <div class=\\\"btn btn-confirm\\\" (click)=\\\"confirmPrompt()\\\" translate=\\\"\\\">CONFIRM</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"lds-css ng-scope\\\" *ngIf=\\\"ifShowLoading\\\">\\n    <div class=\\\"lds-wrapper\\\">\\n        <div class=\\\"lds-flickr\\\">\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n        </div>\\n        <!-- <div class=\\\"progress\\\">{{ rate }}%</div> -->\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExportMnemonicPage } from './export-mnemonic.page';\nimport { ComponentsModule } from '../../components/components.module';\nimport { TranslateModule } from \"@ngx-translate/core\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExportMnemonicPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExportMnemonicPage]\n})\nexport class ExportMnemonicPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4cG9ydC1tbmVtb25pYy9leHBvcnQtbW5lbW9uaWMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { GlobalService } from '../../providers/global/global.service';\nimport { NativeService } from '../../providers/native/native.service';\nimport { HelperService } from '../../providers/helper/helper.service';\nimport { Platform, NavController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-export-mnemonic',\n    templateUrl: './export-mnemonic.page.html',\n    styleUrls: ['./export-mnemonic.page.scss'],\n})\nexport class ExportMnemonicPage implements OnInit {\n    action = \"\";\n    enabled = false;\n    wallet;\n    ifEyeOpen = false;\n\n    mnemonicList = [];\n\n    ifShowPasswordPrompt = false;\n    paymentPassword = \"\";\n    promptDesc = \"\";\n    promptError = \"\";\n    ifShowLoading = false;\n\n    askForPassword = false;\n\n    constructor(\n        private router: Router,\n        public activeRouter: ActivatedRoute,\n        private global: GlobalService,\n        private native: NativeService,\n        private helper: HelperService,\n        private navCtrl: NavController,\n    ) {\n        if (this.router.getCurrentNavigation().extras.state) {\n            this.wallet = this.router.getCurrentNavigation().extras.state.wallet;\n            this.action = this.router.getCurrentNavigation().extras.state.action;\n            console.log(this.wallet.privateKey)\n\n            //获取助记词\n            this.mnemonicList = this.wallet.mnemonic.split(\" \");\n\n            // console.log(Buffer)\n            // try {\n            //     var key = Buffer.from(this.wallet.privateKey.replace('0x', ''), 'hex');\n            //     console.log(key)\n            //     this.keystore = JSON.stringify(EthereumWallet.fromPrivateKey(key).toV3(\"123456\", {\n            //         n: 1024\n            //     }));\n            //     console.log(this.keystore)\n            // } catch (e) {\n            //     console.log(e.message)\n            // }\n\n            // this.wallet.encrypt(\"123456\").then(res => {\n            //     console.log(\"aaaaaa\" + res)\n            //     this.keystore = res;\n            // }).catch(e => {\n            //     console.log(\"sdfsdfds\")\n            // })\n        } else {\n            //导出助记词\n            this.wallet = this.global.gWalletList[this.global.currentWalletIndex];\n            this.askForPassword = true;\n        }\n    }\n\n    async ngOnInit() {\n        let error = await this.helper.getTranslate('EXPORT_NEED_PASSEORD');\n        this.promptDesc = error\n        setTimeout(() => {\n            this.enabled = true;\n        }, 3000);\n\n        if (this.askForPassword) {\n            setTimeout(() => {\n                //需要用户输入密码\n                this.ifShowPasswordPrompt = true;\n            }, 500);\n        }\n    }\n\n    toggleEyeOpen() {\n        this.ifEyeOpen = !this.ifEyeOpen;\n    }\n\n    goNext() {\n        if (this.enabled) {\n            let navigationExtras: NavigationExtras = {\n                state: {\n                    wallet: this.wallet,\n                }\n            };\n            //前往验证页\n            this.router.navigate(['backup-mnemonic'], navigationExtras);\n        }\n    }\n\n    cancelPrompt() {\n        this.ifShowPasswordPrompt = false;\n        setTimeout(() => {\n            this.navCtrl.pop();\n        }, 50);\n    }\n\n    async confirmPrompt() {\n        this.promptError = \"\";\n        if (!this.paymentPassword) {\n            let error = await this.helper.getTranslate('PASSWORD_EMPTY');\n            this.promptError = error;\n            return;\n        }\n        this.ifShowLoading = true;\n        setTimeout(async () => {\n            //解码\n            let ret = this.helper.decryptPrivateKey(this.wallet.keystore, this.paymentPassword);\n            if (ret.flag) {\n                this.ifShowPasswordPrompt = false;\n                this.ifShowLoading = false;\n                //根据私钥生成助记词    \n                this.wallet = this.helper.generateMnemonicWallet(ret.privateKey);\n                this.mnemonicList = this.wallet.mnemonic.split(\" \");\n                return;\n            } else {\n                this.ifShowLoading = false;\n                let error = await this.helper.getTranslate('PASSEORD_ERROR');\n                this.promptError = error;\n            }\n        }, 100);\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-export-mnemonic-export-mnemonic-module-es5.js"}