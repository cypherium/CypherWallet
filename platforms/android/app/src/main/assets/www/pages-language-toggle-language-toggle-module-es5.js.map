{"version":3,"sources":["src/app/pages/language-toggle/language-toggle.page.html","src/app/pages/language-toggle/language-toggle.module.ts","src/app/pages/language-toggle/language-toggle.page.scss","src/app/pages/language-toggle/language-toggle.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'DISPLAY_LANGUAGE' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"gray-content\\\">\\n    <div class=\\\"my-content\\\">\\n        <div class=\\\"item-list\\\">\\n            <div class=\\\"item\\\" tappable (click)=\\\"setLanguage('cn')\\\">\\n                <div class=\\\"label\\\">简体中文</div>\\n                <div class=\\\"content\\\"></div>\\n                <div class=\\\"selector\\\" *ngIf=\\\"global.settings.language == 'cn'\\\"></div>\\n            </div>\\n            <div class=\\\"item\\\" tappable (click)=\\\"setLanguage('en')\\\">\\n                <div class=\\\"label\\\">English</div>\\n                <div class=\\\"content\\\"></div>\\n                <div class=\\\"selector\\\" *ngIf=\\\"global.settings.language == 'en'\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LanguageTogglePage } from './language-toggle.page';\nimport { TranslateModule } from \"@ngx-translate/core\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LanguageTogglePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LanguageTogglePage]\n})\nexport class LanguageTogglePageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xhbmd1YWdlLXRvZ2dsZS9sYW5ndWFnZS10b2dnbGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../providers/global/global.service';\nimport { HelperService } from '../../providers/helper/helper.service';\nimport { Storage } from '@ionic/storage';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Platform, NavController } from '@ionic/angular';\nimport { TranslateService } from \"@ngx-translate/core\";\n\n\n@Component({\n    selector: 'app-language-toggle',\n    templateUrl: './language-toggle.page.html',\n    styleUrls: ['./language-toggle.page.scss'],\n})\nexport class LanguageTogglePage implements OnInit {\n\n    constructor(\n        private router: Router,\n        public global: GlobalService,\n        private storage: Storage,\n        private helper: HelperService,\n        private navCtrl: NavController,\n        private translate: TranslateService,\n        public activeRouter: ActivatedRoute,\n    ) { }\n\n    ngOnInit() {\n    }\n\n    setLanguage(lang) {\n        if (lang != this.global.settings.language) {\n            this.global.settings.language = lang;\n            this.storage.set('localsetting', JSON.stringify(this.global.settings));\n        }\n        this.translate.use(lang);\n        this.navCtrl.pop();\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-language-toggle-language-toggle-module-es5.js"}