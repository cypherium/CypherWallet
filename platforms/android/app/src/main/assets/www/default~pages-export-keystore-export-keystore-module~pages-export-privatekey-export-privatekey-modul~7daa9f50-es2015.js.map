{"version":3,"sources":["./src/app/providers/http-helper/http-helper.service.ts","./src/app/providers/http/http.service.ts","./src/app/providers/storage/storage.service.ts","./src/app/providers/util/util.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA2C;AACiB;AACH;AACA;AAsBzD;;GAEG;AAIH,IAAa,iBAAiB,yBAA9B,MAAa,iBAAiB;IAG1B,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IACxC,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,OAAO;QAC5B,MAAM,cAAc,GAAmB;YACnC,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,KAAK;SACrB,CAAC;QACF,OAAO,OAAO,CAAC,CAAC,mBAAM,cAAc,EAAK,OAAO,EAAG,CAAC,CAAC,cAAc,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,OAAO;QACvB,MAAM,QAAQ,GAAG,mBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxD,OAAO,uEAAc,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IAC/D,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,IAAS;QAClC,MAAM,QAAQ,GAAG,mBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxD,uEAAc,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,OAAO;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,OAAO,CAAC,GAAG,GAAG,SAAS,GAAG,OAAO,CAAC;IAC7C,CAAC;IAED,aAAa,CAAC,OAAO,EAAE,OAAuB;QAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,yDAAyD;QACzD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SAC5D;aAAM;YACH,oEAAa,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACxE;IACL,CAAC;IAED,cAAc,CAAC,OAAO;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,yDAAyD;QACzD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACrD;aAAM;YACH,oEAAa,CAAC,GAAG,CAAC,kBAAkB,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACzE;IACL,CAAC;IAED,YAAY,CAAC,OAAO;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,yDAAyD;QACzD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACnD;aAAM;YACH,oEAAa,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACxE;IACL,CAAC;IAEO,WAAW,CAAC,OAAuB;QACvC,EAAE,mBAAiB,CAAC,YAAY,CAAC;QACjC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;IACrD,CAAC;IAEO,WAAW;QACf,EAAE,mBAAiB,CAAC,YAAY,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;IACxE,CAAC;CAEJ;AAtEU,8BAAY,GAAG,CAAC,CAAC,CAAC,2CAA2C;;YAEzC,oEAAa;;AAH/B,iBAAiB;IAH7B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;2EAI6B,oEAAa;GAH/B,iBAAiB,CAuE7B;AAvE6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Ba;AACuC;AAClC;AACS;AACN;AACV;AACuB;AACP;AACA;AAC8B;AAC9B;AACF;AAEvD;;GAEG;AAIH,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,mFAAiB;IAE9C,YAAmB,IAAgB,EACxB,MAAqB,EACpB,gBAAkC,EACnC,MAAqB;QAC5B,KAAK,CAAC,MAAM,CAAC,CAAC;QAJC,SAAI,GAAJ,IAAI,CAAY;QACxB,WAAM,GAAN,MAAM,CAAe;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACnC,WAAM,GAAN,MAAM,CAAe;IAEhC,CAAC;IAEM,GAAG,CAAC,GAAW,EAAE,SAAc,EAAE,EAAE,UAA0B,EAAE;QAClE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC9B,MAAM,OAAO,GAAG;YACZ,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,GAAG;YACR,MAAM;SACT,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEM,IAAI,CAAC,GAAW,EAAE,OAAY,EAAE,EAAE,UAA0B,EAAE;QACjE,MAAM,OAAO,GAAG;YACZ,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,IAAI;YACJ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,iCAAiC;aACpD,CAAC;SACL,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEM,MAAM,CAAC,GAAW,EAAE,SAAc,EAAE,EAAE,UAA0B,EAAE;QACrE,MAAM,OAAO,GAAG;YACZ,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,GAAG;YACR,MAAM;SACT,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEM,YAAY,CAAC,GAAW,EAAE,SAAc,EAAE,EAAE,UAA0B,EAAE;QAC3E,MAAM,OAAO,GAAG;YACZ,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,MAAM;YACN,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kDAAkD;aACrE,CAAC;SACL,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEM,SAAS,CAAC,OAAO,EAAE,OAAuB;QAC7C,MAAM,cAAc,GAAG,mFAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACpE,OAAO,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAC/H,CAAC;IAED;;OAEG;IACI,cAAc,CAAC,OAAO,EAAE,OAAuB;QAClD,yBAAyB;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO,CAAC,GAAG,GAAG,qEAAW,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC;SACxD;QACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7C,SAAS;QACT,6BAA6B;QAC7B,8DAA8D;QAC9D,+HAA+H;QAC/H,IAAI;QACJ,OAAO,+CAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC3C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,mBAAmB;YAC3C,CAAC,EAAE,GAAG,CAAC,EAAE;gBACL,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,OAAO,CAAC,GAAG,EAAE,GAAmB;QACnC,MAAM,OAAO,mBACT,GAAG,EAAE,EAAE,EACP,MAAM,EAAE,MAAM,EACd,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,IAAI,EACZ,aAAa,EAAE,KAAK,EACpB,OAAO,EAAE,IAAI,EACb,cAAc,EAAE,KAAK,EACrB,eAAe,EAAE,KAAK,EACtB,YAAY,EAAE,MAAM,EACpB,MAAM,EAAE;gBACJ,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,8BAA8B;gBACxC,eAAe,EAAE,UAAU;gBAC3B,6BAA6B,EAAE,GAAG;gBAClC,8BAA8B,EAAE,0IAA0I;gBAC1K,kCAAkC,EAAE,MAAM;gBAC1C,8BAA8B,EAAE,wDAAwD;aAC3F,IACE,GAAG,CACT,CAAC;QACF,MAAM,OAAO,GAAG,mFAAiB,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,GAAG,8DAAW,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,+CAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAChC,gCAAgC;YAChC,IAAI,OAAO,CAAC,SAAS,EAAE;gBACnB,MAAM,WAAW,GAAG,mFAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC5D,IAAI,WAAW,EAAE;oBACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC3B,OAAO;iBACV;aACJ;YACD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CACxD,8DAAO,CAAC,qEAAW,CAAC,cAAc,CAAC,CACtC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACrB,OAAO,CAAC,SAAS,IAAI,mFAAiB,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,8BAA8B;gBACjG,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS;gBAChC,IAAI,IAAI,IAAI,qEAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;oBAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qEAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBACpD;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;oBACvB,oEAAa,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBAC9D;qBAAM,IAAI,qEAAa,CAAC,OAAO,EAAE;oBAC9B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;iBACvF;gBACD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;oBAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;iBACtE;qBAAM;oBACH,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;iBAChC;YACL,CAAC,EAAE,GAAG,CAAC,EAAE;gBACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;oBAClB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC9D;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEK,YAAY,CAAC,GAAG;;YAClB,IAAI,KAAK,GAAW,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACtD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC/C,OAAO,CAAC,KAAK,CAAC;gBAClB,CAAC,CAAC;YACN,CAAC,CAAC;YACF,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACW,mBAAmB,CAAC,GAAW,EAAE,GAAsB;;YACjE,MAAM,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;YACjC,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YACnD,sBAAsB;YACtB,IAAI,MAAM,KAAK,GAAG,EAAE;gBAChB,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC1B,wBAAwB;gBACxB,IAAI,OAAO,CAAC,IAAI,KAAK,GAAG,EAAE;oBACtB,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;oBACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC5B;qBAAM;oBACH,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,qEAAa,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;iBACzE;gBACD,OAAO,OAAO,CAAC;aAClB;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE;gBACvD,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;gBACpD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;iBAAM,IAAI,GAAG,YAAY,iDAAY,EAAE;gBACpC,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACtD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACjC;iBAAM;gBACH,IAAI,MAAM,KAAK,CAAC,EAAE;oBACd,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;iBAClD;qBAAM,IAAI,MAAM,KAAK,GAAG,EAAE;oBACvB,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;iBACtD;qBAAM,IAAI,MAAM,KAAK,GAAG,EAAE;oBACvB,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;iBAClD;gBACD,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACtD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC7B,oEAAa,CAAC,IAAI,CAAC,GAAG,EAAE;oBACpB,GAAG;oBACH,MAAM;iBACT,CAAC,CAAC;aACN;YACD,OAAO,GAAG,CAAC;QACf,CAAC;KAAA;CAEJ;;YApM4B,+DAAU;YAChB,oEAAa;YACF,qEAAgB;YAC3B,oEAAa;;AALvB,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;2EAG2B,+DAAU;QAChB,oEAAa;QACF,qEAAgB;QAC3B,oEAAa;GALvB,WAAW,CAsMvB;AAtMuB;;;;;;;;;;;;;;;;;;ACnBmB;AAE3C;;;GAGG;AAIH,IAAa,cAAc,GAA3B,MAAa,cAAc;CAiC1B;AAhCiB,6BAAc,GAAG;IAC3B,GAAG,CAAC,GAAW,EAAE,KAAU;QACvB,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;IACD,GAAG,CAAC,GAAW;QACX,MAAM,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/C,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IACD,MAAM,CAAC,GAAW;QACd,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IACD,KAAK;QACD,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;CACJ,CAAC;AAEY,2BAAY,GAAG;IACzB,GAAG,CAAC,GAAW,EAAE,KAAU;QACvB,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IACD,GAAG,CAAC,GAAW;QACX,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IACD,MAAM,CAAC,GAAW;QACd,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IACD,KAAK;QACD,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACJ,CAAC;AA/BO,cAAc;IAH1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,cAAc,CAiC1B;AAjC0B;;;;;;;;;;;;;;;;;;ACTgB;AAE3C;;GAEG;AAIH,IAAa,WAAW,GAAxB,MAAa,WAAW;IACpB;;;;;;;;;;;OAWG;IACH,MAAM,CAAC,UAAU,CAAC,IAAU,EAAE,UAAkB,YAAY;QACxD,MAAM,IAAI,GAAG;YACT,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,GAAG;YACX,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,GAAG;YACZ,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,CAAC;SACjB,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAE1C,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9C,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;aAC3B,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;aAC1B,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;aAC3B,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aAC1B,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;aAC1B,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;aAC1B,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5B,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC;aAC7B,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACnC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,SAAS,CAAC,GAAW;QACxB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SAC9C;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,SAAS,CAAC,GAAG;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC,CAAC,YAAY;SAC7B;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,CAAC,EAAE,CAAC,CAAC,QAAQ;SAChB;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACnB,CAAC,EAAE,CAAC,CAAC,WAAW;SACnB;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACnB,CAAC,EAAE,CAAC,CAAC,WAAW;SACnB;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,CAAC,EAAE,CAAC,CAAC,WAAW;SACnB;QACD,IAAI,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE;YACjB,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW;SACrB;QACD,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,KAAK,CAAC,EAAE;YACT,OAAO,QAAQ,CAAC;SACnB;QACD,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,OAAO,MAAM,CAAC;SACjB;IACL,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE;QACrB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxB,KAAK,GAAG,CAAC,CAAC;SACb;QACD,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAI;QACP,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,MAAM,QAAQ,GAAG,kBAAkB,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;SACxE;QACD,OAAO,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,kBAAkB,CAAC,GAAW,EAAE,QAAkB,EAAE,QAAgB,IAAI,EAAE,SAAiB,IAAI,EAAE,YAAY,GAAG,WAAW;QAC9H,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACxB,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;QAC9B,GAAG,CAAC,MAAM,GAAG;YACT,MAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnE,MAAM,CAAC,KAAK,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC;YAClC,MAAM,CAAC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC;YACrC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YACjD,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,SAAS,CAAC,CAAC;aACvB;QACL,CAAC,CAAC;QACF,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;IAClB,CAAC;CACJ;AA1JY,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,WAAW,CA0JvB;AA1JuB","file":"default~pages-export-keystore-export-keystore-module~pages-export-privatekey-export-privatekey-modul~7daa9f50-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { StorageService } from '../storage/storage.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { HelperService } from '../helper/helper.service';\nimport { GlobalService } from '../global/global.service';\n\nexport declare interface RequestSetting {\n    /**\n     * 是否使用默认api\n     */\n    useDefaultApi?: boolean;\n    /**\n     * 请求结果是否需要缓存\n     */\n    needCache?: boolean;\n    /**\n     * 是否显示loading\n     */\n    showLoading?: boolean;\n\t/**\n\t * 是否忽略错误\n\t */\n    ignoreError?: boolean;\n}\n\n/**\n * http工具类\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpHelperService {\n    static requestCount = 0; // 记录未完成的请求数量,当请求数为0关闭loading,当不为0显示loading\n\n    constructor(public helper: HelperService) {\n    }\n\n    static getDefaultSetting(setting) {\n        const defaultSetting: RequestSetting = {\n            useDefaultApi: true,\n            needCache: false,\n            showLoading: false,\n            ignoreError: false\n        };\n        return setting ? { ...defaultSetting, ...setting } : defaultSetting;\n    }\n\n    static getCacheData(options) {\n        const cacheKey = HttpHelperService.getCacheKey(options);\n        return StorageService.sessionStorage.get(cacheKey) || null;\n    }\n\n    static setCacheData(options, data: any) {\n        const cacheKey = HttpHelperService.getCacheKey(options);\n        StorageService.sessionStorage.set(cacheKey, data);\n    }\n\n    static getCacheKey(options) {\n        const strParams = JSON.stringify(options.params);\n        const strBody = JSON.stringify(options.body);\n        return options.url + strParams + strBody;\n    }\n\n    requestBefore(options, setting: RequestSetting) {\n        this.showLoading(setting);\n        // if (this.helper.isMobile() && GlobalService.showLog) {\n        if (this.helper.isMobile()) {\n            console.log(\"Before request:\" + JSON.stringify(options));\n        } else {\n            LoggerService.log('Before request:', '#3880ff', 'options:', options);\n        }\n    }\n\n    requestSuccess(options) {\n        this.hideLoading();\n        // if (this.helper.isMobile() && GlobalService.showLog) {\n        if (this.helper.isMobile()) {\n            console.log(\"Request succeed for:\" + options.url);\n        } else {\n            LoggerService.log('Request succeed:', '#10dc60', 'options:', options);\n        }\n    }\n\n    requestError(options) {\n        this.hideLoading();\n        // if (this.helper.isMobile() && GlobalService.showLog) {\n        if (this.helper.isMobile()) {\n            console.log(\"Request error for:\" + options.url);\n        } else {\n            LoggerService.log('Request failed:', '#f04141', 'options:', options);\n        }\n    }\n\n    private showLoading(setting: RequestSetting) {\n        ++HttpHelperService.requestCount;\n        setting.showLoading && this.helper.showLoading();\n    }\n\n    private hideLoading() {\n        --HttpHelperService.requestCount === 0 && this.helper.hideLoading();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, TimeoutError } from 'rxjs';\nimport { LoggerService } from '../logger/logger.service';\nimport { UtilService } from '../util/util.service';\nimport { timeout } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { NativeService } from '../native/native.service';\nimport { HelperService } from '../helper/helper.service';\nimport { HttpHelperService, RequestSetting } from '../http-helper/http-helper.service';\nimport { GlobalService } from '../global/global.service';\nimport { TranslateService } from \"@ngx-translate/core\";\n\n/**\n * 封装angular http\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService extends HttpHelperService {\n\n    constructor(public http: HttpClient,\n        public helper: HelperService,\n        private translateService: TranslateService,\n        public native: NativeService) {\n        super(helper);\n    }\n\n    public get(url: string, params: any = {}, setting: RequestSetting = {}) {\n        console.log(\"getgetget\", url);\n        const options = {\n            method: 'GET',\n            url: url,\n            params\n        };\n        return this.doRequest(options, setting);\n    }\n\n    public post(url: string, body: any = {}, setting: RequestSetting = {}): Observable<any> {\n        const options = {\n            method: 'POST',\n            url: url,\n            body,\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json; charset=UTF-8'\n            })\n        };\n        return this.doRequest(options, setting);\n    }\n\n    public delete(url: string, params: any = {}, setting: RequestSetting = {}) {\n        const options = {\n            method: 'DELETE',\n            url: url,\n            params\n        };\n        return this.doRequest(options, setting);\n    }\n\n    public postFormData(url: string, params: any = {}, setting: RequestSetting = {}): Observable<any> {\n        const options = {\n            method: 'POST',\n            url: url,\n            params,\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            })\n        };\n        return this.doRequest(options, setting);\n    }\n\n    public doRequest(options, setting: RequestSetting) {\n        const defaultSetting = HttpHelperService.getDefaultSetting(setting);\n        return defaultSetting.useDefaultApi ? this.defaultRequest(options, defaultSetting) : this.request(options, defaultSetting);\n    }\n\n    /**\n     * 一个app可能有多个后台接口服务(api),针对主api添加业务处理\n     */\n    public defaultRequest(options, setting: RequestSetting): Observable<any> {\n        //  使用默认API:APP_SERVE_URL\n        if (!options.url.startsWith('http')) {\n            options.url = environment.appServerUrl + options.url;\n        }\n        console.log(\"defaultRequest:\" + options.url);\n        //  添加请求头\n        // if (GlobalService.token) {\n        //     options.headers = options.headers || new HttpHeaders();\n        //     options.headers = options.headers.set('Authorization', `Bearer ${GlobalService.token}`);  // 注：set append返回新的HttpHeaders\n        // }\n        return Observable.create(observer => {\n            this.request(options, setting).subscribe(res => {\n                observer.next(res); // data是主api约定返回的数据\n            }, err => {\n                observer.error(err);\n            });\n        });\n    }\n\n    public request(ops, set: RequestSetting): Observable<any> {\n        const options = {\n            url: '',\n            method: 'POST',\n            body: null,\n            params: null,\n            urlWithParams: false,\n            headers: null,\n            reportProgress: false,\n            withCredentials: false,\n            responseType: 'json',\n            header: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json, text/plain',\n                \"cache-control\": \"no-cache\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token, Accept, Authorization, X-Request-With, Access-Control-Request-Method, Access-Control-Request-Headers\",\n                \"Access-Control-Allow-Credentials\": \"true\",\n                \"Access-Control-Allow-Methods\": \"GET, POST, DELETE, PUT, OPTIONS, TRACE, PATCH, CONNECT\",\n            },\n            ...ops\n        };\n        const setting = HttpHelperService.getDefaultSetting(set);\n        options.url = UtilService.formatUrl(options.url);\n        console.log(JSON.stringify(set));\n        console.log(\"The request url:\" + options.url);\n        return Observable.create(observer => {\n            // 如果需要缓存，先尝试从sessionStorage中取数据\n            if (setting.needCache) {\n                const cacheResult = HttpHelperService.getCacheData(options);\n                if (cacheResult) {\n                    observer.next(cacheResult);\n                    return;\n                }\n            }\n            this.requestBefore(options, setting);\n            this.http.request(options.method, options.url, options).pipe(\n                timeout(environment.requestTimeout)\n            ).subscribe((res: any) => {\n                setting.needCache && HttpHelperService.setCacheData(options, res); // 如果需要缓存，保存数据到sessionStorage中\n                let code = res.err_no; //An error will prompt you\n                if (code && GlobalService.errorCode[code] && !set.ignoreError) {\n                    this.helper.toast(GlobalService.errorCode[code]);\n                }\n                if (!this.helper.IsMobile) {\n                    LoggerService.log('Response', '#10dc60', options.url, res);\n                } else if (GlobalService.showLog) {\n                    console.log(\"Request response:\" + JSON.stringify(res) + \" with url:\" + options.url);\n                }\n                if (code && !set.ignoreError) {\n                    this.requestError(options);\n                    observer.error(this.requestFailedHandle(options.url, res.message));\n                } else {\n                    observer.next(res);\n                    this.requestSuccess(options);\n                }\n            }, err => {\n                if (!set.ignoreError) {\n                    this.requestError(options);\n                    observer.error(this.requestFailedHandle(options.url, err));\n                }\n            });\n        });\n    }\n\n    async getTranslate(key) {\n        let value: string = await new Promise((resolve, reject) => {\n            this.translateService.get(key).subscribe((value) => {\n                resolve(value)\n            })\n        })\n        return value;\n    }\n\n    /**\n     * Handle the failed request event\n     */\n    private async requestFailedHandle(url: string, err: HttpErrorResponse) { // : Response\n        const status = err && err.status;\n        let msg = await this.getTranslate('REQUEST_ERROR');\n        // As agreed with the background, a status code of 400 is a business exception\n        if (status === 400) {\n            const errData = err.error;\n            //  Invalid or expired 401 Token requires re-login\n            if (errData.code === 401) {\n                let error = await this.getTranslate('PAASSWORD_EXPIRED');\n                this.helper.toast(error);\n            } else {\n                let tips = await this.getTranslate('TIPS');\n                this.helper.alert(tips, GlobalService.errorCode[errData.code] || msg);\n            }\n            return errData;\n        }\n        if (this.helper.isMobile() && !this.native.isConnecting()) {\n            let info = await this.getTranslate('NETWORK_ERROR');\n            this.helper.alert(info);\n        } else if (err instanceof TimeoutError) {\n            let tips = await this.getTranslate('TIPS');\n            let info = await this.getTranslate('NETWORK_TIMEOUT');\n            this.helper.alert(tips, info);\n        } else {\n            if (status === 0) {\n                msg = await this.getTranslate('BACKEND_ERROR');\n            } else if (status === 404) {\n                msg = await this.getTranslate('BACKEND_NOT_EXIST');\n            } else if (status === 500) {\n                msg = await this.getTranslate('BACKEND_ERROR1')\n            }\n            let tips = await this.getTranslate('REQUEST_FAILURE');\n            this.helper.alert(tips, msg);\n            LoggerService.http(err, {\n                url,\n                status\n            });\n        }\n        return err;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * 缓存工具类\n * 注：代码中务必使用此方法缓存数据，方便以后切换缓存机制\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n    public static sessionStorage = {\n        set(key: string, value: any) {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        },\n        get(key: string) {\n            const jsonString = sessionStorage.getItem(key);\n            return jsonString ? JSON.parse(jsonString) : null;\n        },\n        remove(key: string) {\n            sessionStorage.removeItem(key);\n        },\n        clear() {\n            sessionStorage.clear();\n        }\n    };\n\n    public static localStorage = {\n        set(key: string, value: any) {\n            localStorage.setItem(key, JSON.stringify(value));\n        },\n        get(key: string) {\n            const jsonString = localStorage.getItem(key);\n            return jsonString ? JSON.parse(jsonString) : null;\n        },\n        remove(key: string) {\n            localStorage.removeItem(key);\n        },\n        clear() {\n            localStorage.clear();\n        }\n    };\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * 工具类：存放和业务无关的公共方法\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilService {\n    /**\n     * 日期对象转为日期字符串\n     * @param date 需要格式化的日期对象\n     * @param sFormat 输出格式,默认为yyyy-MM-dd                        年：y，月：M，日：d，时：h，分：m，秒：s\n     * @example  dateFormat(new Date())                               \"2017-02-28\"\n     * @example  dateFormat(new Date(),'yyyy-MM-dd')                  \"2017-02-28\"\n     * @example  dateFormat(new Date(),'yyyy-MM-dd HH:mm:ss')         \"2017-02-28 13:24:00\"   ps:HH:24小时制\n     * @example  dateFormat(new Date(),'yyyy-MM-dd hh:mm:ss')         \"2017-02-28 01:24:00\"   ps:hh:12小时制\n     * @example  dateFormat(new Date(),'hh:mm')                       \"09:24\"\n     * @example  dateFormat(new Date(),'yyyy-MM-ddTHH:mm:ss+08:00')   \"2017-02-28T13:24:00+08:00\"\n     * @example  dateFormat(new Date('2017-02-28 13:24:00'),'yyyy-MM-ddTHH:mm:ss+08:00')   \"2017-02-28T13:24:00+08:00\"\n     */\n    static dateFormat(date: Date, sFormat: String = 'yyyy-MM-dd'): string {\n        const time = {\n            Year: 0,\n            TYear: '0',\n            Month: 0,\n            TMonth: '0',\n            Day: 0,\n            TDay: '0',\n            Hour: 0,\n            THour: '0',\n            hour: 0,\n            Thour: '0',\n            Minute: 0,\n            TMinute: '0',\n            Second: 0,\n            TSecond: '0',\n            Millisecond: 0\n        };\n        time.Year = date.getFullYear();\n        time.TYear = String(time.Year).substr(2);\n        time.Month = date.getMonth() + 1;\n        time.TMonth = time.Month < 10 ? '0' + time.Month : String(time.Month);\n        time.Day = date.getDate();\n        time.TDay = time.Day < 10 ? '0' + time.Day : String(time.Day);\n        time.Hour = date.getHours();\n        time.THour = time.Hour < 10 ? '0' + time.Hour : String(time.Hour);\n        time.hour = time.Hour < 13 ? time.Hour : time.Hour - 12;\n        time.Thour = time.hour < 10 ? '0' + time.hour : String(time.hour);\n        time.Minute = date.getMinutes();\n        time.TMinute = time.Minute < 10 ? '0' + time.Minute : String(time.Minute);\n        time.Second = date.getSeconds();\n        time.TSecond = time.Second < 10 ? '0' + time.Second : String(time.Second);\n        time.Millisecond = date.getMilliseconds();\n\n        return sFormat.replace(/yyyy/ig, String(time.Year))\n            .replace(/yyy/ig, String(time.Year))\n            .replace(/yy/ig, time.TYear)\n            .replace(/y/ig, time.TYear)\n            .replace(/MM/g, time.TMonth)\n            .replace(/M/g, String(time.Month))\n            .replace(/dd/ig, time.TDay)\n            .replace(/d/ig, String(time.Day))\n            .replace(/HH/g, time.THour)\n            .replace(/H/g, String(time.Hour))\n            .replace(/hh/g, time.Thour)\n            .replace(/h/g, String(time.hour))\n            .replace(/mm/g, time.TMinute)\n            .replace(/m/g, String(time.Minute))\n            .replace(/ss/ig, time.TSecond)\n            .replace(/s/ig, String(time.Second))\n            .replace(/fff/ig, String(time.Millisecond));\n    }\n\n    /**\n     * 返回字符串长度，中文计数为2\n     */\n    static strLength(str: string): number {\n        let len = 0;\n        for (let i = 0, length = str.length; i < length; i++) {\n            str.charCodeAt(i) > 255 ? len += 2 : len++;\n        }\n        return len;\n    }\n\n    /**\n     * 密码强度 返回：low middle high\n     */\n    static checkPass(pwd) {\n        let m = 0;\n        if (pwd.length <= 6) {\n            return 'low'; // 密码长度小于等于6\n        }\n        if (/\\d/.test(pwd)) {\n            m++; // 纯数字密码\n        }\n        if (/[a-z]/.test(pwd)) {\n            m++; // 密码包含小写字母\n        }\n        if (/[A-Z]/.test(pwd)) {\n            m++; // 密码包含大写字母\n        }\n        if (/\\W/.test(pwd)) {\n            m++; // 密码包含特殊字符\n        }\n        if (pwd.length > 15) {\n            m = 4; // 密码长度大于15\n        }\n        if (m < 2) {\n            return 'low';\n        }\n        if (m === 2) {\n            return 'middle';\n        }\n        if (m >= 3) {\n            return 'high';\n        }\n    }\n\n    /**\n     * 把url中的双斜杠替换为单斜杠\n     * 如:http://localhost:8080//api//demo.替换后http://localhost:8080/api/demo\n     */\n    static formatUrl(url = ''): string {\n        let index = 0;\n        if (url.startsWith('http')) {\n            index = 7;\n        }\n        return url.substring(0, index) + url.substring(index).replace(/\\/\\/*/g, '/');\n    }\n\n    /**\n     * Produces a random 32-bit length string\n     */\n    static uuid() {\n        let text = '';\n        const possible = 'abcdef0123456789';\n        for (let i = 0; i < 19; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text + new Date().getTime();\n    }\n\n    /**\n     * Convert the image to base64 string format based on the image path\n     */\n    static convertImgToBase64(url: string, callback: Function, width: number = null, height: number = null, outputFormat = 'image/jpg') {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = function () {\n            const canvas = <HTMLCanvasElement>document.createElement('canvas');\n            canvas.width = width || img.width;\n            canvas.height = height || img.height;\n            const context = canvas.getContext('2d');\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n            const imgBase64 = canvas.toDataURL(outputFormat);\n            if (callback) {\n                callback(imgBase64);\n            }\n        };\n        img.src = url;\n    }\n}\n"],"sourceRoot":"webpack:///"}
